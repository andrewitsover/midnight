const returnTypes = {
  abs: 'integer',
  changes: 'integer',
  char: 'text',
  format: 'text',
  hex: 'text',
  unhex: 'blob',
  instr: 'integer',
  last_insert_rowid: 'integer',
  length: 'integer',
  like: 'boolean',
  likelihood: 'integer',
  lower: 'text',
  ltrim: 'text',
  printf: 'text',
  quote: 'text',
  random: 'integer',
  randomblob: 'blob',
  replace: 'text',
  round: 'integer',
  rtrim: 'text',
  sign: 'integer',
  substr: 'text',
  substring: 'text',
  total_changes: 'integer',
  trim: 'text',
  typeof: 'text',
  unicode: 'integer',
  upper: 'text',
  date: 'text',
  time: 'text',
  datetime: 'text',
  julianday: 'integer',
  unixepoch: 'integer',
  strftime: 'text',
  timediff: 'text',
  avg: 'real',
  count: 'integer',
  group_concat: 'text',
  max: 'integer',
  min: 'integer',
  sum: 'integer',
  total: 'integer',
  row_number: 'integer',
  rank: 'integer',
  dense_rank: 'integer',
  percent_rank: 'integer',
  cume_dist: 'integer',
  ntile: 'integer',
  acos: 'integer',
  acosh: 'integer',
  asin: 'integer',
  asinh: 'integer',
  atan: 'integer',
  atan2: 'integer',
  atanh: 'integer',
  ceil: 'integer',
  ceiling: 'integer',
  cos: 'integer',
  cosh: 'integer',
  degrees: 'integer',
  exp: 'integer',
  floor: 'integer',
  ln: 'integer',
  log: 'integer',
  log10: 'integer',
  log2: 'integer',
  mod: 'integer',
  pi: 'integer',
  pow: 'integer',
  power: 'integer',
  radians: 'integer',
  sin: 'integer',
  sinh: 'integer',
  sqrt: 'integer',
  tan: 'integer',
  tanh: 'integer',
  trunc: 'integer',
  json: 'json',
  json_error_position: 'integer',
  json_insert: 'json',
  json_replace: 'json',
  json_set: 'json',
  json_quote: 'json',
  json_remove: 'json',
  json_patch: 'json',
  json_pretty: 'json',
  json_extract: 'any',
  json_array: 'json',
  json_array_length: 'integer',
  json_object: 'json',
  json_type: 'text',
  json_valid: 'integer',
  json_group_array: 'json',
  json_group_object: 'json',
  jsonb: 'jsonb',
  jsonb_insert: 'jsonb',
  jsonb_replace: 'jsonb',
  jsonb_set: 'jsonb',
  jsonb_remove: 'jsonb',
  jsonb_patch: 'jsonb',
  jsonb_extract: 'any',
  jsonb_array: 'jsonb',
  jsonb_object: 'jsonb',
  jsonb_group_array: 'jsonb',
  jsonb_group_object: 'jsonb',
  highlight: 'text',
  snippet: 'text',
  sqlite_version: 'text',
  if: 'any',
  iif: 'any',
  ifnull: 'any',
  coalesce: 'any',
  concat: 'text',
  concat_ws: 'text'
};

const notNullFunctions = new Set([
  'concat',
  'concat_ws',
  'count',
  'changes',
  'char',
  'glob',
  'hex',
  'last_insert_rowid',
  'like',
  'likelihood',
  'likely',
  'lower',
  'printf',
  'quote',
  'random',
  'randomblob',
  'replace',
  'round',
  'rtrim',
  'sqlite_source_id',
  'sqlite_version',
  'substr',
  'substring',
  'total_changes',
  'trim',
  'typeof',
  'unicode',
  'unlikely',
  'upper',
  'zeroblob',
  'json',
  'json_error_position',
  'json_array',
  'json_object',
  'json_valid',
  'json_group_array',
  'json_group_object',
  'json_each',
  'json_tree',
  'jsonb',
  'jsonb_array',
  'jsonb_object',
  'jsonb_group_array',
  'jsonb_group_object',
  'highlight',
  'snippet',
  'row_number',
  'rank',
  'dense_rank',
  'percent_rank',
  'cume_dist',
  'ntile'
]);

const expressionFunctions = new Set(['lag', 'lead', 'first_value', 'last_value', 'nth_value']);

export {
  returnTypes,
  notNullFunctions,
  expressionFunctions
}
